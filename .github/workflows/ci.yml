name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: |
        mvn -B package --file pom.xml
        echo "✅ Build with Maven completed successfully"

    - name: Conventional Commit Validation
      uses: wagoid/commitlint-github-action@v5

    - name: Echo Commit Validation Status
      run: echo "✅ Conventional Commit Validation passed"

    - name: Semantic Version
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: version
      uses: paulhatch/semantic-version@v5.0.2
      with:
        tag_prefix: "v"
        major_pattern: "BREAKING CHANGE:"
        minor_pattern: "feat:"
        patch_pattern: "fix:"

    - name: Echo Version Info
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "✅ Semantic Version step completed"
        echo "Version: v${{ steps.version.outputs.version }}"
        echo "Major: ${{ steps.version.outputs.major }}"
        echo "Minor: ${{ steps.version.outputs.minor }}"
        echo "Patch: ${{ steps.version.outputs.patch }}"

    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release v${{ steps.version.outputs.version }}
        draft: false
        prerelease: false

    - name: Echo Release Status
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "✅ Release created successfully"
        echo "Tag: v${{ steps.version.outputs.version }}"
        echo "Release Name: Release v${{ steps.version.outputs.version }}"
